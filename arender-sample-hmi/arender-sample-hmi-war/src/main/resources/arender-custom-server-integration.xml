<?xml version="1.0" encoding="UTF-8"?>

<beans default-lazy-init="true" default-autowire="no"
	xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- xml imported by ARender Java Web Server side, please add any customization you wish to see loaded in this file-->

	<bean id="sampleURLParser" class="com.arondor.arender.sample.connector.urlparsers.SampleURLParser"
		  scope="prototype">
	</bean>

	<bean id="sampleAnnotationAccessor"
		  class="com.arondor.arender.sample.connector.annotationaccessors.SampleAnnotationAccessor"
		  scope="prototype">
		<property name="annotationCreationPolicy">
			<bean
					class="com.arondor.viewer.client.api.annotation.AnnotationCreationPolicy">
				<property name="canCreateAnnotations"
						  value="${arender.server.annotations.can.create}" />
				<property name="textAnnotationsSupportHtml"
						  value="${arender.server.annotations.text.html.support}" />
				<property name="textAnnotationsSupportReply"
						  value="${arender.server.annotations.text.reply.support}" />
				<property name="textAnnotationsSupportStatus"
						  value="${arender.server.annotations.text.status.support}" />
				<property name="textAnnotationsCommentSupportReply"
						  value="${arender.server.annotations.text.comment.reply.support}" />

				<!-- For each annotation, show a list of security levels to choose from -->
				<property name="annotationsSupportSecurity"
						  value="${arender.server.annotations.text.security.support}" />
				<property name="availableSecurityLevels"
						  ref="availableSecurityLevels" />
				<property name="annotationTemplateCatalog"
						  ref="annotationTemplateCatalog" />
			</bean>
		</property>
	</bean>

	<!-- Class to use only if all XFDF annotations of one document are saved in the same inputStream
	and specific call needs to be done to get/update annotation -->
	<bean id="sampleXFDFAnnotationAccessor"
		  class="com.arondor.viewer.xfdf.annotation.XFDFAnnotationAccessor"
		  scope="prototype">
		<property name="contentAccessor">
			<bean
					class="com.arondor.arender.sample.connector.annotationaccessors.SampleSerializedAnnotationContentAccessor">
			</bean>
		</property>
		<property name="annotationCreationPolicy">
			<bean
					class="com.arondor.viewer.client.api.annotation.AnnotationCreationPolicy">
				<property name="canCreateAnnotations"
						  value="${arender.server.annotations.can.create}" />
				<property name="textAnnotationsSupportHtml"
						  value="${arender.server.annotations.text.html.support}" />
				<property name="textAnnotationsSupportReply"
						  value="${arender.server.annotations.text.reply.support}" />
				<property name="textAnnotationsSupportStatus"
						  value="${arender.server.annotations.text.status.support}" />
				<property name="textAnnotationsCommentSupportReply"
						  value="${arender.server.annotations.text.comment.reply.support}" />

				<!-- For each annotation, show a list of security levels to choose from -->
				<property name="annotationsSupportSecurity"
						  value="${arender.server.annotations.text.security.support}" />
				<property name="availableSecurityLevels"
						  ref="availableSecurityLevels" />
				<property name="annotationTemplateCatalog"
						  ref="annotationTemplateCatalog" />
			</bean>
		</property>
	</bean>

	<!-- Below an annotation accessor with restricted access for users -->
	<bean id="sampleRestrictedXFDFAnnotationAccessor"
		  class="com.arondor.arender.sample.connector.annotationaccessors.SampleRestrictedXFDFAnnotationAccessor"
		  scope="prototype">
		<property name="contentAccessor">
			<bean
					class="com.arondor.viewer.xfdf.annotation.FileSerializedContentAccessor">
				<property name="path"
						  value="${arender.server.annotations.xfdf.localstorage.default.path}" />
			</bean>
		</property>
		<!-- <property name="recoverCDATA" value="true" /> -->


		<property name="annotationCreationPolicy">
			<bean
					class="com.arondor.viewer.client.api.annotation.AnnotationCreationPolicy">
				<property name="canCreateAnnotations"
						  value="${arender.server.annotations.can.create}" />
				<property name="textAnnotationsSupportHtml"
						  value="${arender.server.annotations.text.html.support}" />
				<property name="textAnnotationsSupportReply"
						  value="${arender.server.annotations.text.reply.support}" />
				<property name="textAnnotationsSupportStatus"
						  value="${arender.server.annotations.text.status.support}" />
				<property name="textAnnotationsCommentSupportReply"
						  value="${arender.server.annotations.text.comment.reply.support}" />

				<!-- For each annotation, show a list of security levels to choose from -->
				<property name="annotationsSupportSecurity"
						  value="${arender.server.annotations.text.security.support}" />
				<property name="availableSecurityLevels"
						  ref="availableSecurityLevels" />
				<property name="annotationTemplateCatalog"
						  ref="annotationTemplateCatalog" />
			</bean>
		</property>

	</bean>

	<!--Uncomment to activate the custom authentication service provider-->
	<!--<bean id="defaultAuthenticationServiceProvider"-->
		  <!--class="com.arondor.arender.sample.connector.authentication.service.CustomAuthenticationServiceProvider"-->
		  <!--scope="singleton" />-->

	<!-- Adding useLocalDocumentAccessorForAnnotations=false to activate the annotation management from the Rendition
	Please update the below delegate bean at each ARender update -->
<!--	<bean id="delegate"-->
<!--		  class="com.arondor.viewer.common.rendition.connector.ClientDocumentService">-->
<!--		<property name="useLocalDocumentAccessorForAnnotations" value="false" />-->
<!--		<property name="remoteDocumentServiceProvider"-->
<!--				  ref="remoteDocumentServiceProvider" />-->
<!--		<property name="ignoreDocumentAccessorsWithExceptions"-->
<!--				  value="${arender.server.rendition.ignore.document.accessors.with.exceptions}" />-->
<!--		<property name="maxTries"-->
<!--				  value="${arender.server.rendition.max.tries}" />-->
<!--		<property name="remoteTargets" ref="remoteTargetUrls" />-->
<!--		<property name="searchDocumentsInRenditionTargets"-->
<!--				  value="${arender.server.rendition.search.documents}" />-->
<!--		<property name="routingTable"-->
<!--				  ref="routeTableMap${arender.server.routing.table.type}" />-->
<!--		<property name="displayWatermarkProviderBeanName" value="${arender.server.watermark.display.provider}" />-->
<!--		<property name="watermarkConfiguration" ref="watermarkConfiguration" />-->
<!--	</bean>-->

</beans>

