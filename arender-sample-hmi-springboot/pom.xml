<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>arender-sample-connector-parent</artifactId>
        <groupId>com.arondor.arender</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>arender-sample-hmi-springboot</artifactId>
    <packaging>jar</packaging>
    <name>ARender HMI sample with Spring-boot</name>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.samaxes.filter</groupId>
            <artifactId>cachefilter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>

        <dependency>
            <groupId>net.sourceforge.pjl-comp-filter</groupId>
            <artifactId>pjl-comp-filter</artifactId>
        </dependency>

        <!-- Base dependency : HMI -->
        <dependency>
            <groupId>com.arondor.arender</groupId>
            <artifactId>arondor-arender-hmi-server</artifactId>
            <version>${arender.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>2.9.0</version>
        </dependency>
    </dependencies>

    <properties>
        <arender.version>2023.2.2</arender.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>
    <pluginRepositories>
        <pluginRepository>
            <id>gwtplatform.plugin</id>
            <name>Gwtplatform custom plugin repository</name>
            <url>http://maven.gwt-platform.googlecode.com/hg/</url>
            <layout>default</layout>
        </pluginRepository>
    </pluginRepositories>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>target/war</directory>
                <includes>
                    <include>**/*.html</include>
                    <include>**/*.css</include>
                    <include>**/*.js</include>
                    <include>**/*.ico</include>
                    <include>**/*.gif</include>
                    <include>**/*.rpc</include>
                    <include>**/*.png</include>
                    <include>**/*.svg</include>
                    <include>**/fonts/**</include>
                    <include>**/images/**</include>
                </includes>
            </resource>
            <resource>
                <directory>target/war/public/WEB-INF/classes</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <!-- first, copy file from original ARender WAR -->
                                <artifactItem>
                                    <groupId>com.arondor.arender</groupId>
                                    <artifactId>arondor-arender-hmi</artifactId>
                                    <version>${arender.version}</version>
                                    <type>war</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.basedir}/target/war/public/</outputDirectory>
                                    <includes>**/*</includes>
                                    <excludes>**/*.jar</excludes>
                                </artifactItem>
                                <!-- then, overwrite custom file from sample war project WAR -->
                                <artifactItem>
                                    <groupId>com.arondor.arender</groupId>
                                    <artifactId>arender-sample-hmi-war</artifactId>
                                    <version>${project.version}</version>
                                    <type>war</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.basedir}/target/war/public/</outputDirectory>
                                    <includes>**/*</includes>
                                    <excludes>**/*.jar</excludes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <!-- Exclude log4j to make sure that we are using slf4j -->
                                <exclude>
                                    <groupId>log4j</groupId>
                                    <artifactId>log4j</artifactId>
                                </exclude>
                                <exclude>
                                    <groupId>org.apache.logging.log4j</groupId>
                                    <artifactId>log4j-core</artifactId>
                                </exclude>
                                <exclude>
                                    <groupId>org.apache.logging.log4j</groupId>
                                    <artifactId>log4j-1.2-api</artifactId>
                                </exclude>
                            </excludes>
                            <layout>ZIP</layout>
                            <webxml>web.xml</webxml>
                            <mainClass>com.arondor.viewer.ARenderApplication</mainClass>
                            <executable>true</executable>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <configuration>
                            <target>
                                <copy file="${project.basedir}/target/war/public/ARender.html" tofile="${project.basedir}/target/war/public/index.html" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>clean</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <task>Cleaning deployed webapp</task>
                            <target>
                                <delete dir="${project.basedir}/war"/>
                                <delete dir="${project.basedir}/target/war"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>